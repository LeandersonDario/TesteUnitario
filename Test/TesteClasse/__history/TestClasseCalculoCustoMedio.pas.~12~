unit TestClasseCalculoCustoMedio;
{
Desenvolvida por Dario projeto Piloto o princípio AAA – Arrange, Act e Assert.

 Principios
 Siga o princípio AAA – Arrange, Act e Assert.
 Arrange – preparar todas as condições necessárias para a execução do teste.
 Act – executar o que será testado.
 Assert – validar as informações depois do teste.
}

interface

uses
  TestFramework,
  classes,
  forms,
  uCalculoCustoMedio,
  dialogs,
  uInterfaceCalculoCustoMedio,
  SysUtils;
const
	cArquivo = 'ArquivoTeste.txt';

type
  // Test methods for class tCalucoCustoMedio

  TesttCalucoCustoMedio = class(TTestCase)
  private
    FtCalucoCustoMedio: tCalucoCustoMedio;
    Flista : TStringList;
    Procedure ListaDadosTXT;

  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    [Test]
    procedure Calcula_custo_medio;
    procedure Resgatar_parametros;
  end;

implementation

procedure TesttCalucoCustoMedio.SetUp;
begin
  FtCalucoCustoMedio := tCalucoCustoMedio.Create;
end;

procedure TesttCalucoCustoMedio.TearDown;
begin
  FtCalucoCustoMedio.Free;
  FtCalucoCustoMedio := nil;
end;

procedure TesttCalucoCustoMedio.Calcula_custo_medio;
var
  Resultado: Double;

begin
  // TODO: Setup method call parameters
  Resultado := FtCalucoCustoMedio.Calcula_custo_medio(10,10,10,10,10,10);
  CheckEquals(Resultado,10,'Resultado dentro do parametro eperado');
  // TODO: Validate method results
end;

procedure TesttCalucoCustoMedio.ListaDadosTXT;
begin

Flista := TStringList.Create;
  try
    Flista := TStringList.Create;
  try
    Flista.Add('server name=pat1567');
    Flista.Add('database name=Wise800');
    Flista.Add('usuário=supervisor');
    Flista.Add('senha=123456');
	  Flista.Add('Empresa=1');
	  Flista.Add('Dt. emissao inicial=18122019');
	  Flista.Add('Dt. emissao final=18122019');
	  Flista.Add('número da NFe=126545');
	  Flista.Add('data de emissao=18122019');
	  Flista.Add('data de referencia=18122019');
	  Flista.Add('cliente= 000003');
	  Flista.Add('operacao de entrada= 000001');
	  Flista.Add('empresa do estoque= 000001');
	  Flista.Add('empresa do financeiro= 000001');
	  Flista.Add('produto= 000067');
	  Flista.Add('quantidade= 1');
	  Flista.Add('vl. unitário=1000');
	  Flista.Add('setor= 000001');
	  Flista.Add('cfop=1.102');
	  Flista.Add('origem=0');
	  Flista.Add('sit. tributária=40');
	  Flista.Add('vl.total=1000');
	  Flista.Add('setor de entrada= 000001');
	  Flista.Add('Prazo= 000030');
	  Flista.Add('numero título= 126545-1');
	  Flista.Add('vencimento=18122019');
	  Flista.Add('valor= 1000');
    Flista.Add('forma de pagamento= 000005');

    Flista.SaveToFile(cArquivo);

  finally

  end;
  finally
    Flista.Free;
  end;
end;

procedure TesttCalucoCustoMedio.Resgatar_parametros;
begin

end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TesttCalucoCustoMedio.Suite);
end.

