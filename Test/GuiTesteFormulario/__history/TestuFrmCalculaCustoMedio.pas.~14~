unit TestuFrmCalculaCustoMedio;
{
  Desenvolvida por Dario
}

interface

uses
  TestFramework,
  DUnitX.TestFramework,
  classes,
  forms,
  dialogs,
  SysUtils,
  uCalculoCustoMedio,
  uInterfaceCalculoCustoMedio,
  TestExtensions,
  GUITesting,
  StdCtrls,
  uFrmCalculaCustoMedio;

type
  // Test methods for class TfrmCalculaCusto

  TestTfrmCalculaCusto = class(TGUITestCase)
  private
    FcalculoCustoMedio : tCalucoCustoMedio;
    FfrmCalculaCusto: TfrmCalculaCusto;
    // formulario   calcula custo
    edtQtde_Estoque_Anterior: TEdit;
    edtCusto_Médio_Anterior: TEdit;
    edtQuantidade_comprada: TEdit;
    edtVl_Reposicao: TEdit;
    edtQtde_Anterior: TEdit;
    edtQtd_Comprada: TEdit;
    edtResultado: TEdit;

  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    [Test]
    procedure Valida_btnCalcularClick;
    procedure Valida_Digitacao_Edit;

  end;

implementation

procedure TestTfrmCalculaCusto.SetUp;
begin
  FfrmCalculaCusto := TfrmCalculaCusto.Create(Application);
  FfrmCalculaCusto.Show;
  FcalculoCustoMedio := tCalucoCustoMedio.Create;
end;

procedure TestTfrmCalculaCusto.TearDown;
begin
  FfrmCalculaCusto.Free;
  FfrmCalculaCusto := nil;
end;

procedure TestTfrmCalculaCusto.Valida_Digitacao_Edit;
begin
  edtQtde_Estoque_Anterior := FindControl('edtQtde_Estoque_Anterior') as TEdit;
  edtQtde_Estoque_Anterior.Text := '10';
  CheckEquals('10', edtQtde_Estoque_Anterior.Text,'Teste de digitação edtQtde_Estoque_Anterior' );

  edtCusto_Médio_Anterior := FindControl('edtCusto_Médio_Anterior') as TEdit;
  edtCusto_Médio_Anterior.Text := '10';
  CheckEquals('10', edtCusto_Médio_Anterior.Text,'Teste de digitação edtCusto_Médio_Anterior.Text' );

  edtQuantidade_comprada := FindControl('edtQuantidade_comprada') as TEdit;
  edtQuantidade_comprada.Text := '10';
  CheckEquals('10', edtQuantidade_comprada.Text,'Teste de digitação edtQuantidade_comprada' );

  edtVl_Reposicao := FindControl('edtVl_Reposicao') as TEdit;
  edtVl_Reposicao.Text := '10';
  CheckEquals('10', edtVl_Reposicao.Text, 'Teste de digitação edtVl_Reposicao');

  edtQtde_Anterior := FindControl('edtQtde_Anterior') as TEdit;
  edtQtde_Anterior.Text := '10';
  CheckEquals('10', edtQtde_Anterior.Text, 'Teste de digitação edtQtde_Anterior');

  edtQtd_Comprada := FindControl('edtQtd_Comprada') as TEdit;
  EnterTextInto( edtQtd_Comprada, '10');
  Checkequals('10', edtQtd_Comprada.Text, 'Teste de digitação edtQtd_Comprada');

end;

procedure TestTfrmCalculaCusto.Valida_btnCalcularClick;
var
  Sender: TObject;
begin
  ActionDelay := 600;
  Click('btnCalcular');
  edtResultado := FindControl('edtResultado') as TEdit;
  CheckEquals('10', edtResultado.Text, ' resulta no  edtResultado');
  ActionDelay := 500;
end;



initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmCalculaCusto.Suite);
end.

